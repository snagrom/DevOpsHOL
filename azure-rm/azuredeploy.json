{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.1",
    "parameters": {
      "storageType": {
        "type": "string",
        "defaultValue": "Premium_LRS",
        "allowedValues": [
          "Premium_LRS",
          "Standard_LRS"
        ],
        "metadata": {
          "description": "Which type of storage you want to use"
        }
      },
      "vmName": {
        "type": "string",
        "defaultValue": "VSVM-choco",
        "metadata": {
          "description": "Local name for the VM can be whatever you want"
        }
      },
      "vmAdminUserName": {
        "type": "string",
        "defaultValue": "avanadeholuser",
        "metadata": {
          "description": "VM admin user name"
        }
      },
      "vmAdminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "VM admin password. The supplied password must be between 8-123 characters long and must satisfy at least 3 of password complexity requirements from the following: 1) Contains an uppercase character 2) Contains a lowercase character 3) Contains a numeric digit 4) Contains a special character."
        }
      },
      "vmSize": {
        "type": "string",
        "metadata": {
          "description": "Desired Size of the VM. Any valid option accepted but if you choose premium storage type you must choose a DS class VM size."
        },
        "defaultValue": "Standard_D2s_v3"
      },
      "vmVisualStudioVersion": {
        "type": "string",
        "defaultValue": "vs-2019-comm-latest-win10-n",
        "allowedValues": [
            "vs-2019-comm-latest-win10-n",
            "vs-2019-comm-latest-ws2019",
            "vs-2019-ent-latest-win10-n",
            "vs-2019-ent-latest-ws2019"
        ],
        "metadata": {
          "description": "Which version of Visual Studio you would like to deploy"
        }
      },
      "dnsLabelPrefix": {
        "type": "string",
        "defaultValue": "avanadehol-choco",
        "metadata": {
        "description": "DNS Label for the unique Public IP. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
        }
      },
      "chocoPackages": {
        "type": "string",
        "defaultValue": "sysinternals;googlechrome",
        "metadata": {
          "description": "List of Chocolatey packages to install separated by a semi-colon. Can not be empty. eg. nodejs-lts;python2;visualstudiocode;notepadplusplus;googlechrome;dotnetcore --version 1.1.2"
        }
      }
    },
      "variables": {
        "storageName": "[concat('stor', uniquestring(resourceGroup().id))]",
        "vnet01Prefix": "10.0.0.0/16",
        "vnet01Subnet1Name": "Subnet-1",
        "vnet01Subnet1Prefix": "10.0.0.0/24",
        "vmImagePublisher": "MicrosoftVisualStudio",
        "vmImageOffer": "visualstudio2019latest",
        "vmOSDiskName": "VMOSDisk",
        "vmVnetName": "[concat(parameters('VMName'), '-net')]",
        "vmVnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vmVnetName'))]",
        "vmSubnetRef": "[concat(variables('vmVnetID'), '/subnets/', variables('Vnet01Subnet1Name'))]",
        "vmStorageAccountContainerName": "vhds",
        "vmNicName": "[concat(parameters('vmName'), '-nic')]",
        "vmIP01Name": "[concat(parameters('vmName'), '-ip')]",
        "ChocolateyInstallScriptFolder": ".",
        "ChocolateyInstallScriptFileName": "InstallChocolatey.ps1",
        "ChocolateyInstallURL": "https://raw.githubusercontent.com/Avanade/DevOpsHOL/master/azure-rm/scripts/InstallChocolatey.ps1"
      },
      "resources": [
        {
          "name": "[variables('storageName')]",
          "type": "Microsoft.Storage/storageAccounts",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [ ],
          "tags": {
            "displayName": "Storage01"
          },
          "properties": {
            "accountType": "[parameters('storageType')]"
          }
        },
        {
          "name": "[variables('vmVnetName')]",
          "type": "Microsoft.Network/virtualNetworks",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [ ],
          "properties": {
            "addressSpace": {
              "addressPrefixes": [
                "[variables('vnet01Prefix')]"
              ]
            },
            "subnets": [
              {
                "name": "[variables('vnet01Subnet1Name')]",
                "properties": {
                  "addressPrefix": "[variables('vnet01Subnet1Prefix')]"
                }
              }
            ]
          }
        },
        {
          "name": "[variables('vmNicName')]",
          "type": "Microsoft.Network/networkInterfaces",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', variables('vmVnetName'))]",
            "[concat('Microsoft.Network/publicIPAddresses/', variables('vmIP01Name'))]"
          ],
          "properties": {
            "ipConfigurations": [
              {
                "name": "ipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "subnet": {
                    "id": "[variables('vmSubnetRef')]"
                  },
                  "publicIPAddress": {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmIP01Name'))]"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "[parameters('vmName')]",
          "type": "Microsoft.Compute/virtualMachines",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
            "[concat('Microsoft.Network/networkInterfaces/', variables('vmNicName'))]"
          ],
          "properties": {
            "hardwareProfile": {
              "vmSize": "[parameters('vmSize')]"
            },
            "osProfile": {
              "computerName": "[parameters('vmName')]",
              "adminUsername": "[parameters('vmAdminUsername')]",
              "adminPassword": "[parameters('vmAdminPassword')]"
            },
            "storageProfile": {
              "imageReference": {
                "publisher": "[variables('vmImagePublisher')]",
                "offer": "[variables('vmImageOffer')]",
                "sku": "[parameters('vmVisualStudioVersion')]",
                "version": "latest"
              },
              "osDisk": {
                "name": "VMOSDisk",
                "vhd": {
                  "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageName')), '2015-06-15').primaryEndpoints.blob, variables('vmStorageAccountContainerName'), '/', variables('vmOSDiskName'), '.vhd')]"
                },
                "caching": "ReadWrite",
                "createOption": "FromImage"
              }
            },
            "networkProfile": {
              "networkInterfaces": [
                {
                  "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]"
                }
              ]
            }
          },
          "resources": [
            {
              "type": "extensions",
              "name": "CustomScriptExtension",
              "apiVersion": "2015-06-15",
              "location": "[resourceGroup().location]",
              "dependsOn": [
                "[parameters('vmName')]"
              ],
              "tags": {
                "displayName": "Install Chocolatey Applications"
              },
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.8",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "[variables('ChocolateyInstallURL')]"
                  ],
                 "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('ChocolateyInstallScriptFolder'), '/', variables('ChocolateyInstallScriptFileName'),' -chocoPackages ',parameters('chocoPackages'))]"
                }
              }
            }
          ]
        },
        {
          "name": "[variables('vmIP01Name')]",
          "type": "Microsoft.Network/publicIPAddresses",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [ ],
          "properties": {
            "publicIPAllocationMethod": "Dynamic",
            "dnsSettings": {
              "domainNameLabel": "[parameters('dnsLabelPrefix')]"
            }
          }
        }
      ],
      "outputs": { }
    }
  
